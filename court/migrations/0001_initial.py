# Generated by Django 3.2 on 2021-08-27 23:21

import court.models.task
from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import fernet_fields.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('first_name', models.CharField(max_length=255)),
                ('middle_name', models.CharField(default='test', max_length=255)),
                ('last_name', models.CharField(max_length=255)),
                ('user_type', models.PositiveSmallIntegerField(choices=[(1, 'admin'), (2, 'supervisor'), (3, 'manager'), (4, 'lawyer')], default=1)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Case',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.PositiveSmallIntegerField(choices=[(1, 'Type 1'), (2, 'Type 2'), (3, 'Type 3'), (4, 'Type 4'), (5, 'Type 5'), (6, 'Type 6'), (7, 'Type 7'), (8, 'Type 8')], default=1)),
                ('status', models.PositiveSmallIntegerField(choices=[(1, 'Входирано'), (2, 'Активно'), (3, 'Приключено')], default=1)),
                ('delivery_method', models.PositiveSmallIntegerField(choices=[(1, 'Поща'), (2, 'Призовкар'), (3, 'Куриер')], null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('User', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_time', models.DateTimeField(validators=[court.models.task.validate_after_yesterday])),
                ('note', fernet_fields.fields.EncryptedCharField(max_length=255)),
                ('type', models.PositiveSmallIntegerField(choices=[(1, 'Type 1'), (2, 'Type 2'), (3, 'Type 3'), (4, 'Type 4'), (5, 'Type 5'), (6, 'Type 6'), (7, 'Type 7'), (8, 'Type 8'), (9, 'Type 9'), (10, 'Type 10')], default=1)),
                ('case', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='court.case')),
            ],
        ),
        migrations.CreateModel(
            name='Note',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('note', fernet_fields.fields.EncryptedTextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('case', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='court.case')),
            ],
        ),
        migrations.CreateModel(
            name='Debtor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.PositiveSmallIntegerField(choices=[(1, 'Физическо лице'), (2, 'Юридическо лице')], default=1)),
                ('identifier', fernet_fields.fields.EncryptedCharField(max_length=255)),
                ('first_name', fernet_fields.fields.EncryptedCharField(max_length=255)),
                ('middle_name', fernet_fields.fields.EncryptedCharField(max_length=255)),
                ('last_name', fernet_fields.fields.EncryptedCharField(max_length=255)),
                ('gender', models.PositiveSmallIntegerField(choices=[(1, 'Мъж'), (2, 'Жена')], null=True)),
                ('country', fernet_fields.fields.EncryptedCharField(max_length=255, null=True)),
                ('city', fernet_fields.fields.EncryptedCharField(max_length=255)),
                ('zone', fernet_fields.fields.EncryptedCharField(max_length=255, null=True)),
                ('id_address', fernet_fields.fields.EncryptedCharField(max_length=255, null=True)),
                ('address', fernet_fields.fields.EncryptedCharField(max_length=255)),
                ('email', fernet_fields.fields.EncryptedCharField(max_length=254, null=True)),
                ('phone', fernet_fields.fields.EncryptedCharField(max_length=255, null=True)),
                ('case', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='court.case')),
                ('parent', models.ForeignKey(null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='debtor', to='court.debtor')),
            ],
        ),
        migrations.CreateModel(
            name='Creditor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.PositiveSmallIntegerField(choices=[(1, 'Физическо лице'), (2, 'Юридическо лице')], default=1)),
                ('identifier', fernet_fields.fields.EncryptedCharField(max_length=255)),
                ('first_name', fernet_fields.fields.EncryptedCharField(max_length=255)),
                ('middle_name', fernet_fields.fields.EncryptedCharField(max_length=255)),
                ('last_name', fernet_fields.fields.EncryptedCharField(max_length=255)),
                ('gender', models.PositiveSmallIntegerField(choices=[(1, 'Мъж'), (2, 'Жена')], null=True)),
                ('country', fernet_fields.fields.EncryptedCharField(max_length=255, null=True)),
                ('city', fernet_fields.fields.EncryptedCharField(max_length=255)),
                ('zone', fernet_fields.fields.EncryptedCharField(max_length=255, null=True)),
                ('ID_address', fernet_fields.fields.EncryptedCharField(max_length=255, null=True)),
                ('address', fernet_fields.fields.EncryptedCharField(max_length=255)),
                ('email', fernet_fields.fields.EncryptedEmailField(max_length=254, null=True)),
                ('phone', fernet_fields.fields.EncryptedCharField(max_length=255, null=True)),
                ('case', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='court.case')),
            ],
        ),
    ]
